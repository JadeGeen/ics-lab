
asm-64:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	ret    

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 82 2f 00 00    	push   0x2f82(%rip)        # 3fa8 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 83 2f 00 00 	bnd jmp *0x2f83(%rip)        # 3fb0 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	push   $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	push   $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64 
    1054:	68 02 00 00 00       	push   $0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    105f:	90                   	nop
    1060:	f3 0f 1e fa          	endbr64 
    1064:	68 03 00 00 00       	push   $0x3
    1069:	f2 e9 b1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    106f:	90                   	nop

Disassembly of section .plt.got:

0000000000001070 <__cxa_finalize@plt>:
    1070:	f3 0f 1e fa          	endbr64 
    1074:	f2 ff 25 7d 2f 00 00 	bnd jmp *0x2f7d(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    107b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

0000000000001080 <puts@plt>:
    1080:	f3 0f 1e fa          	endbr64 
    1084:	f2 ff 25 2d 2f 00 00 	bnd jmp *0x2f2d(%rip)        # 3fb8 <puts@GLIBC_2.2.5>
    108b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001090 <__stack_chk_fail@plt>:
    1090:	f3 0f 1e fa          	endbr64 
    1094:	f2 ff 25 25 2f 00 00 	bnd jmp *0x2f25(%rip)        # 3fc0 <__stack_chk_fail@GLIBC_2.4>
    109b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010a0 <__assert_fail@plt>:
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	f2 ff 25 1d 2f 00 00 	bnd jmp *0x2f1d(%rip)        # 3fc8 <__assert_fail@GLIBC_2.2.5>
    10ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010b0 <__printf_chk@plt>:
    10b0:	f3 0f 1e fa          	endbr64 
    10b4:	f2 ff 25 15 2f 00 00 	bnd jmp *0x2f15(%rip)        # 3fd0 <__printf_chk@GLIBC_2.3.4>
    10bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

00000000000010c0 <_start>:
    10c0:	f3 0f 1e fa          	endbr64 
    10c4:	31 ed                	xor    %ebp,%ebp
    10c6:	49 89 d1             	mov    %rdx,%r9
    10c9:	5e                   	pop    %rsi
    10ca:	48 89 e2             	mov    %rsp,%rdx
    10cd:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    10d1:	50                   	push   %rax
    10d2:	54                   	push   %rsp
    10d3:	4c 8d 05 16 03 00 00 	lea    0x316(%rip),%r8        # 13f0 <__libc_csu_fini>
    10da:	48 8d 0d 9f 02 00 00 	lea    0x29f(%rip),%rcx        # 1380 <__libc_csu_init>
    10e1:	48 8d 3d 6b 01 00 00 	lea    0x16b(%rip),%rdi        # 1253 <main>
    10e8:	ff 15 f2 2e 00 00    	call   *0x2ef2(%rip)        # 3fe0 <__libc_start_main@GLIBC_2.2.5>
    10ee:	f4                   	hlt    
    10ef:	90                   	nop

00000000000010f0 <deregister_tm_clones>:
    10f0:	48 8d 3d 19 2f 00 00 	lea    0x2f19(%rip),%rdi        # 4010 <__TMC_END__>
    10f7:	48 8d 05 12 2f 00 00 	lea    0x2f12(%rip),%rax        # 4010 <__TMC_END__>
    10fe:	48 39 f8             	cmp    %rdi,%rax
    1101:	74 15                	je     1118 <deregister_tm_clones+0x28>
    1103:	48 8b 05 ce 2e 00 00 	mov    0x2ece(%rip),%rax        # 3fd8 <_ITM_deregisterTMCloneTable>
    110a:	48 85 c0             	test   %rax,%rax
    110d:	74 09                	je     1118 <deregister_tm_clones+0x28>
    110f:	ff e0                	jmp    *%rax
    1111:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1118:	c3                   	ret    
    1119:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001120 <register_tm_clones>:
    1120:	48 8d 3d e9 2e 00 00 	lea    0x2ee9(%rip),%rdi        # 4010 <__TMC_END__>
    1127:	48 8d 35 e2 2e 00 00 	lea    0x2ee2(%rip),%rsi        # 4010 <__TMC_END__>
    112e:	48 29 fe             	sub    %rdi,%rsi
    1131:	48 89 f0             	mov    %rsi,%rax
    1134:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1138:	48 c1 f8 03          	sar    $0x3,%rax
    113c:	48 01 c6             	add    %rax,%rsi
    113f:	48 d1 fe             	sar    %rsi
    1142:	74 14                	je     1158 <register_tm_clones+0x38>
    1144:	48 8b 05 a5 2e 00 00 	mov    0x2ea5(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable>
    114b:	48 85 c0             	test   %rax,%rax
    114e:	74 08                	je     1158 <register_tm_clones+0x38>
    1150:	ff e0                	jmp    *%rax
    1152:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1158:	c3                   	ret    
    1159:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001160 <__do_global_dtors_aux>:
    1160:	f3 0f 1e fa          	endbr64 
    1164:	80 3d a5 2e 00 00 00 	cmpb   $0x0,0x2ea5(%rip)        # 4010 <__TMC_END__>
    116b:	75 2b                	jne    1198 <__do_global_dtors_aux+0x38>
    116d:	55                   	push   %rbp
    116e:	48 83 3d 82 2e 00 00 	cmpq   $0x0,0x2e82(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1175:	00 
    1176:	48 89 e5             	mov    %rsp,%rbp
    1179:	74 0c                	je     1187 <__do_global_dtors_aux+0x27>
    117b:	48 8b 3d 86 2e 00 00 	mov    0x2e86(%rip),%rdi        # 4008 <__dso_handle>
    1182:	e8 e9 fe ff ff       	call   1070 <__cxa_finalize@plt>
    1187:	e8 64 ff ff ff       	call   10f0 <deregister_tm_clones>
    118c:	c6 05 7d 2e 00 00 01 	movb   $0x1,0x2e7d(%rip)        # 4010 <__TMC_END__>
    1193:	5d                   	pop    %rbp
    1194:	c3                   	ret    
    1195:	0f 1f 00             	nopl   (%rax)
    1198:	c3                   	ret    
    1199:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000011a0 <frame_dummy>:
    11a0:	f3 0f 1e fa          	endbr64 
    11a4:	e9 77 ff ff ff       	jmp    1120 <register_tm_clones>

00000000000011a9 <asm_add>:
    11a9:	f3 0f 1e fa          	endbr64 
    11ad:	53                   	push   %rbx
    11ae:	48 89 f8             	mov    %rdi,%rax
    11b1:	48 89 f3             	mov    %rsi,%rbx
    11b4:	48 01 d8             	add    %rbx,%rax
    11b7:	5b                   	pop    %rbx
    11b8:	c3                   	ret    

00000000000011b9 <asm_popcnt>:
    11b9:	f3 0f 1e fa          	endbr64 
    11bd:	53                   	push   %rbx
    11be:	ba 00 00 00 00       	mov    $0x0,%edx
    11c3:	89 d1                	mov    %edx,%ecx
    11c5:	48 89 fb             	mov    %rdi,%rbx

00000000000011c8 <L1>:
    11c8:	83 f9 40             	cmp    $0x40,%ecx
    11cb:	7d 17                	jge    11e4 <L2>
    11cd:	48 89 d8             	mov    %rbx,%rax
    11d0:	48 d3 e8             	shr    %cl,%rax
    11d3:	48 83 e0 01          	and    $0x1,%rax
    11d7:	48 85 c0             	test   %rax,%rax
    11da:	74 03                	je     11df <L3>
    11dc:	83 c2 01             	add    $0x1,%edx

00000000000011df <L3>:
    11df:	83 c1 01             	add    $0x1,%ecx
    11e2:	eb e4                	jmp    11c8 <L1>

00000000000011e4 <L2>:
    11e4:	89 d0                	mov    %edx,%eax
    11e6:	5b                   	pop    %rbx
    11e7:	c3                   	ret    

00000000000011e8 <asm_memcpy>:
    11e8:	f3 0f 1e fa          	endbr64 
    11ec:	53                   	push   %rbx
    11ed:	48 89 f8             	mov    %rdi,%rax
    11f0:	48 89 d3             	mov    %rdx,%rbx
    11f3:	48 89 d1             	mov    %rdx,%rcx
    11f6:	48 c1 e9 02          	shr    $0x2,%rcx
    11fa:	f3 a5                	rep movsl %ds:(%rsi),%es:(%rdi)
    11fc:	f7 c3 02 00 00 00    	test   $0x2,%ebx
    1202:	74 02                	je     1206 <L4>
    1204:	66 a5                	movsw  %ds:(%rsi),%es:(%rdi)

0000000000001206 <L4>:
    1206:	f7 c3 01 00 00 00    	test   $0x1,%ebx
    120c:	74 01                	je     120f <L5>
    120e:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)

000000000000120f <L5>:
    120f:	5b                   	pop    %rbx
    1210:	c3                   	ret    

0000000000001211 <asm_setjmp>:
    1211:	f3 0f 1e fa          	endbr64 
    1215:	48 89 1f             	mov    %rbx,(%rdi)
    1218:	48 89 6f 08          	mov    %rbp,0x8(%rdi)
    121c:	48 89 67 10          	mov    %rsp,0x10(%rdi)
    1220:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    1225:	48 89 57 18          	mov    %rdx,0x18(%rdi)
    1229:	b8 00 00 00 00       	mov    $0x0,%eax
    122e:	c3                   	ret    

000000000000122f <asm_longjmp>:
    122f:	f3 0f 1e fa          	endbr64 
    1233:	89 f2                	mov    %esi,%edx
    1235:	89 d0                	mov    %edx,%eax
    1237:	85 c0                	test   %eax,%eax
    1239:	75 03                	jne    123e <L6>
    123b:	83 c0 01             	add    $0x1,%eax

000000000000123e <L6>:
    123e:	48 8b 1f             	mov    (%rdi),%rbx
    1241:	48 8b 6f 08          	mov    0x8(%rdi),%rbp
    1245:	48 8b 67 10          	mov    0x10(%rdi),%rsp
    1249:	48 8b 57 18          	mov    0x18(%rdi),%rdx
    124d:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    1252:	c3                   	ret    

0000000000001253 <main>:
    1253:	f3 0f 1e fa          	endbr64 
    1257:	53                   	push   %rbx
    1258:	48 83 ec 30          	sub    $0x30,%rsp
    125c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1263:	00 00 
    1265:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    126a:	31 c0                	xor    %eax,%eax
    126c:	48 89 e7             	mov    %rsp,%rdi
    126f:	e8 9d ff ff ff       	call   1211 <asm_setjmp>
    1274:	89 c3                	mov    %eax,%ebx
    1276:	85 c0                	test   %eax,%eax
    1278:	75 78                	jne    12f2 <main+0x9f>
    127a:	be 2e 16 00 00       	mov    $0x162e,%esi
    127f:	bf d2 04 00 00       	mov    $0x4d2,%edi
    1284:	e8 20 ff ff ff       	call   11a9 <asm_add>
    1289:	48 3d 00 1b 00 00    	cmp    $0x1b00,%rax
    128f:	75 23                	jne    12b4 <main+0x61>
    1291:	48 bf ef cd ab 89 67 	movabs $0x123456789abcdef,%rdi
    1298:	45 23 01 
    129b:	e8 19 ff ff ff       	call   11b9 <asm_popcnt>
    12a0:	83 f8 20             	cmp    $0x20,%eax
    12a3:	75 2e                	jne    12d3 <main+0x80>
    12a5:	48 89 e7             	mov    %rsp,%rdi
    12a8:	be 7b 00 00 00       	mov    $0x7b,%esi
    12ad:	e8 7d ff ff ff       	call   122f <asm_longjmp>
    12b2:	eb 67                	jmp    131b <main+0xc8>
    12b4:	48 8d 0d b5 0d 00 00 	lea    0xdb5(%rip),%rcx        # 2070 <__PRETTY_FUNCTION__.0>
    12bb:	ba 09 00 00 00       	mov    $0x9,%edx
    12c0:	48 8d 35 3d 0d 00 00 	lea    0xd3d(%rip),%rsi        # 2004 <_IO_stdin_used+0x4>
    12c7:	48 8d 3d 3f 0d 00 00 	lea    0xd3f(%rip),%rdi        # 200d <_IO_stdin_used+0xd>
    12ce:	e8 cd fd ff ff       	call   10a0 <__assert_fail@plt>
    12d3:	48 8d 0d 96 0d 00 00 	lea    0xd96(%rip),%rcx        # 2070 <__PRETTY_FUNCTION__.0>
    12da:	ba 0a 00 00 00       	mov    $0xa,%edx
    12df:	48 8d 35 1e 0d 00 00 	lea    0xd1e(%rip),%rsi        # 2004 <_IO_stdin_used+0x4>
    12e6:	48 8d 3d 5b 0d 00 00 	lea    0xd5b(%rip),%rdi        # 2048 <_IO_stdin_used+0x48>
    12ed:	e8 ae fd ff ff       	call   10a0 <__assert_fail@plt>
    12f2:	89 c2                	mov    %eax,%edx
    12f4:	48 8d 35 2e 0d 00 00 	lea    0xd2e(%rip),%rsi        # 2029 <_IO_stdin_used+0x29>
    12fb:	bf 01 00 00 00       	mov    $0x1,%edi
    1300:	b8 00 00 00 00       	mov    $0x0,%eax
    1305:	e8 a6 fd ff ff       	call   10b0 <__printf_chk@plt>
    130a:	83 fb 7b             	cmp    $0x7b,%ebx
    130d:	75 3f                	jne    134e <main+0xfb>
    130f:	48 8d 3d 23 0d 00 00 	lea    0xd23(%rip),%rdi        # 2039 <_IO_stdin_used+0x39>
    1316:	e8 65 fd ff ff       	call   1080 <puts@plt>
    131b:	89 da                	mov    %ebx,%edx
    131d:	48 8d 35 1d 0d 00 00 	lea    0xd1d(%rip),%rsi        # 2041 <_IO_stdin_used+0x41>
    1324:	bf 01 00 00 00       	mov    $0x1,%edi
    1329:	b8 00 00 00 00       	mov    $0x0,%eax
    132e:	e8 7d fd ff ff       	call   10b0 <__printf_chk@plt>
    1333:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    1338:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    133f:	00 00 
    1341:	75 2a                	jne    136d <main+0x11a>
    1343:	b8 00 00 00 00       	mov    $0x0,%eax
    1348:	48 83 c4 30          	add    $0x30,%rsp
    134c:	5b                   	pop    %rbx
    134d:	c3                   	ret    
    134e:	48 8d 0d 1b 0d 00 00 	lea    0xd1b(%rip),%rcx        # 2070 <__PRETTY_FUNCTION__.0>
    1355:	ba 0f 00 00 00       	mov    $0xf,%edx
    135a:	48 8d 35 a3 0c 00 00 	lea    0xca3(%rip),%rsi        # 2004 <_IO_stdin_used+0x4>
    1361:	48 8d 3d c8 0c 00 00 	lea    0xcc8(%rip),%rdi        # 2030 <_IO_stdin_used+0x30>
    1368:	e8 33 fd ff ff       	call   10a0 <__assert_fail@plt>
    136d:	e8 1e fd ff ff       	call   1090 <__stack_chk_fail@plt>
    1372:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    1379:	00 00 00 
    137c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001380 <__libc_csu_init>:
    1380:	f3 0f 1e fa          	endbr64 
    1384:	41 57                	push   %r15
    1386:	4c 8d 3d 13 2a 00 00 	lea    0x2a13(%rip),%r15        # 3da0 <__frame_dummy_init_array_entry>
    138d:	41 56                	push   %r14
    138f:	49 89 d6             	mov    %rdx,%r14
    1392:	41 55                	push   %r13
    1394:	49 89 f5             	mov    %rsi,%r13
    1397:	41 54                	push   %r12
    1399:	41 89 fc             	mov    %edi,%r12d
    139c:	55                   	push   %rbp
    139d:	48 8d 2d 04 2a 00 00 	lea    0x2a04(%rip),%rbp        # 3da8 <__do_global_dtors_aux_fini_array_entry>
    13a4:	53                   	push   %rbx
    13a5:	4c 29 fd             	sub    %r15,%rbp
    13a8:	48 83 ec 08          	sub    $0x8,%rsp
    13ac:	e8 4f fc ff ff       	call   1000 <_init>
    13b1:	48 c1 fd 03          	sar    $0x3,%rbp
    13b5:	74 1f                	je     13d6 <__libc_csu_init+0x56>
    13b7:	31 db                	xor    %ebx,%ebx
    13b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    13c0:	4c 89 f2             	mov    %r14,%rdx
    13c3:	4c 89 ee             	mov    %r13,%rsi
    13c6:	44 89 e7             	mov    %r12d,%edi
    13c9:	41 ff 14 df          	call   *(%r15,%rbx,8)
    13cd:	48 83 c3 01          	add    $0x1,%rbx
    13d1:	48 39 dd             	cmp    %rbx,%rbp
    13d4:	75 ea                	jne    13c0 <__libc_csu_init+0x40>
    13d6:	48 83 c4 08          	add    $0x8,%rsp
    13da:	5b                   	pop    %rbx
    13db:	5d                   	pop    %rbp
    13dc:	41 5c                	pop    %r12
    13de:	41 5d                	pop    %r13
    13e0:	41 5e                	pop    %r14
    13e2:	41 5f                	pop    %r15
    13e4:	c3                   	ret    
    13e5:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    13ec:	00 00 00 00 

00000000000013f0 <__libc_csu_fini>:
    13f0:	f3 0f 1e fa          	endbr64 
    13f4:	c3                   	ret    

Disassembly of section .fini:

00000000000013f8 <_fini>:
    13f8:	f3 0f 1e fa          	endbr64 
    13fc:	48 83 ec 08          	sub    $0x8,%rsp
    1400:	48 83 c4 08          	add    $0x8,%rsp
    1404:	c3                   	ret    
